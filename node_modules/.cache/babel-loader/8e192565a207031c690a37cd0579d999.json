{"ast":null,"code":"const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT';\nexport const getPosts = async () => {\n  try {\n    const response = await fetch(`${baseURL}/posts`);\n    const results = await response.json();\n    return results;\n  } catch (ex) {\n    console.log('error getting all posts');\n  }\n};\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer TOKEN_STRING_HERE'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    });\n    const result = await response.json();\n    return result;\n  } catch (ex) {\n    console.log('error registering user');\n  }\n};\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    });\n    const result = await response.json();\n    return result;\n  } catch (ex) {\n    console.log('Login Error');\n  }\n};\nexport const grabData = async () => {\n  try {\n    const response = await fetch(`${baseURL}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer TOKEN_STRING_HERE'\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n  } catch (ex) {\n    console.log(console.error);\n  }\n};","map":{"version":3,"names":["baseURL","getPosts","response","fetch","results","json","ex","console","log","registerUser","username","password","method","headers","body","JSON","stringify","user","result","loginUser","grabData","error"],"sources":["/home/sean/Coding/course_work/Stranger's_Things/src/api/index.js"],"sourcesContent":["const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT'\n\nexport const getPosts = async () => {\n  try {\n    const response = await fetch(`${baseURL}/posts`)\n    const results = await response.json()\n    return (results);\n  }\n  catch (ex) {\n    console.log('error getting all posts')\n  }\n}\n\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer TOKEN_STRING_HERE'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    })\n    const result = await response.json();\n    return result;\n  }\n  catch (ex) {\n    console.log('error registering user')\n  }\n\n}\n\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    })\n    const result = await response.json();\n    return result;\n  }\n  catch (ex) {\n    console.log('Login Error')\n  }\n}\n\nexport const grabData = async () => {\n  try{\n    const response = await fetch(`${baseURL}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer TOKEN_STRING_HERE'\n      }\n    })\n    const result = await response.json();\n    console.log(result)\n  }\n  catch(ex){\n    console.log(console.error)\n  }\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+DAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,QAAZ,CAA5B;IACA,MAAMI,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;IACA,OAAQD,OAAR;EACD,CAJD,CAKA,OAAOE,EAAP,EAAW;IACTC,OAAO,CAACC,GAAR,CAAY,yBAAZ;EACD;AACF,CATM;AAWP,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EACxD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,iBAAZ,EAA8B;MACxDY,MAAM,EAAE,MADgD;MAExDC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB;MAFV,CAF+C;MAMxDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAE;UACJP,QAAQ,EAAEA,QADN;UAEJC,QAAQ,EAAEA;QAFN;MADa,CAAf;IANkD,CAA9B,CAA5B;IAaA,MAAMO,MAAM,GAAG,MAAMhB,QAAQ,CAACG,IAAT,EAArB;IACA,OAAOa,MAAP;EACD,CAhBD,CAiBA,OAAOZ,EAAP,EAAW;IACTC,OAAO,CAACC,GAAR,CAAY,wBAAZ;EACD;AAEF,CAtBM;AAwBP,OAAO,MAAMW,SAAS,GAAG,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;EACrD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,cAAZ,EAA2B;MACrDY,MAAM,EAAE,MAD6C;MAErDC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF4C;MAKrDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAE;UACJP,QAAQ,EAAEA,QADN;UAEJC,QAAQ,EAAEA;QAFN;MADa,CAAf;IAL+C,CAA3B,CAA5B;IAYA,MAAMO,MAAM,GAAG,MAAMhB,QAAQ,CAACG,IAAT,EAArB;IACA,OAAOa,MAAP;EACD,CAfD,CAgBA,OAAOZ,EAAP,EAAW;IACTC,OAAO,CAACC,GAAR,CAAY,aAAZ;EACD;AACF,CApBM;AAsBP,OAAO,MAAMY,QAAQ,GAAG,YAAY;EAClC,IAAG;IACD,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAwB;MAClDa,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB;MAFV;IADyC,CAAxB,CAA5B;IAMA,MAAMK,MAAM,GAAG,MAAMhB,QAAQ,CAACG,IAAT,EAArB;IACAE,OAAO,CAACC,GAAR,CAAYU,MAAZ;EACD,CATD,CAUA,OAAMZ,EAAN,EAAS;IACPC,OAAO,CAACC,GAAR,CAAYD,OAAO,CAACc,KAApB;EACD;AACF,CAdM"},"metadata":{},"sourceType":"module"}